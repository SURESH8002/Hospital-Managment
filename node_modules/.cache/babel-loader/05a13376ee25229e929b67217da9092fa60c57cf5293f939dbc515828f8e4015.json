{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hospital Managment\\\\Frontend\\\\myapp\\\\src\\\\components\\\\Doctors.js\",\n  _s = $RefreshSig$();\n// Doctors.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DoctorCard from './DoctorCard';\nimport './DoctorCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doctors = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [newDoctor, setNewDoctor] = useState({\n    name: '',\n    specialty: ''\n  });\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // Fetch doctors from backend\n  useEffect(() => {\n    axios.get('http://localhost:5000/doctors').then(response => setDoctors(response.data)).catch(error => console.error('Error fetching doctors:', error));\n  }, []);\n\n  // Add new doctor\n  const handleAddDoctor = e => {\n    e.preventDefault();\n    axios.post('http://localhost:5000/doctors/add', newDoctor).then(response => {\n      setDoctors([...doctors, response.data]);\n      setNewDoctor({\n        name: '',\n        specialty: ''\n      });\n    }).catch(error => console.error('Error adding doctor:', error));\n  };\n\n  // Update doctor\n  const handleUpdateDoctor = (id, e) => {\n    e.preventDefault();\n    axios.post(`http://localhost:5000/doctors/update/${id}`, selectedDoctor).then(() => {\n      const updatedDoctor = {\n        ...selectedDoctor,\n        _id: id\n      };\n      setDoctors(doctors.map(doc => doc._id === id ? updatedDoctor : doc));\n      setSelectedDoctor(null);\n      setIsEditMode(false);\n    }).catch(error => console.error('Error updating doctor:', error));\n  };\n\n  // Delete doctor\n  const handleDeleteDoctor = id => {\n    axios.delete(`http://localhost:5000/doctors/delete/${id}`).then(() => {\n      setDoctors(doctors.filter(doc => doc._id !== id));\n    }).catch(error => console.error('Error deleting doctor:', error));\n  };\n\n  // Edit doctor\n  const handleEditDoctor = doctor => {\n    setSelectedDoctor(doctor);\n    setIsEditMode(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-doc-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: isEditMode ? 'Edit Doctor' : 'Add New Doctor'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: isEditMode ? e => handleUpdateDoctor(selectedDoctor._id, e) : handleAddDoctor,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: isEditMode ? selectedDoctor.name : newDoctor.name,\n          onChange: e => isEditMode ? setSelectedDoctor({\n            ...selectedDoctor,\n            name: e.target.value\n          }) : setNewDoctor({\n            ...newDoctor,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Specialty: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: isEditMode ? selectedDoctor.specialty : newDoctor.specialty,\n          onChange: e => isEditMode ? setSelectedDoctor({\n            ...selectedDoctor,\n            specialty: e.target.value\n          }) : setNewDoctor({\n            ...newDoctor,\n            specialty: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isEditMode ? 'Update Doctor' : 'Add Doctor'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctors-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Doctors (\", doctors.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-list\",\n        children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(DoctorCard, {\n          doctor: doctor,\n          onEdit: handleEditDoctor,\n          onDelete: handleDeleteDoctor\n        }, doctor._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Doctors, \"nA8UyR+HLHsJlqgR8lQF6nlTTlc=\");\n_c = Doctors;\nexport default Doctors;\nvar _c;\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"names":["React","useState","useEffect","axios","DoctorCard","jsxDEV","_jsxDEV","Doctors","_s","doctors","setDoctors","newDoctor","setNewDoctor","name","specialty","selectedDoctor","setSelectedDoctor","isEditMode","setIsEditMode","get","then","response","data","catch","error","console","handleAddDoctor","e","preventDefault","post","handleUpdateDoctor","id","updatedDoctor","_id","map","doc","handleDeleteDoctor","delete","filter","handleEditDoctor","doctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","length","onEdit","onDelete","_c","$RefreshReg$"],"sources":["D:/Hospital Managment/Frontend/myapp/src/components/Doctors.js"],"sourcesContent":["// Doctors.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport DoctorCard from './DoctorCard';\r\nimport './DoctorCard.css';\r\n\r\nconst Doctors = () => {\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [newDoctor, setNewDoctor] = useState({ name: '', specialty: '' });\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n    // Fetch doctors from backend\r\n    useEffect(() => {\r\n        axios\r\n            .get('http://localhost:5000/doctors')\r\n            .then(response => setDoctors(response.data))\r\n            .catch(error => console.error('Error fetching doctors:', error));\r\n    }, []);\r\n\r\n    // Add new doctor\r\n    const handleAddDoctor = (e) => {\r\n        e.preventDefault();\r\n        axios\r\n            .post('http://localhost:5000/doctors/add', newDoctor)\r\n            .then(response => {\r\n                setDoctors([...doctors, response.data]);\r\n                setNewDoctor({ name: '', specialty: '' });\r\n            })\r\n            .catch(error => console.error('Error adding doctor:', error));\r\n    };\r\n\r\n    // Update doctor\r\n    const handleUpdateDoctor = (id, e) => {\r\n        e.preventDefault();\r\n        axios\r\n            .post(`http://localhost:5000/doctors/update/${id}`, selectedDoctor)\r\n            .then(() => {\r\n                const updatedDoctor = { ...selectedDoctor, _id: id };\r\n                setDoctors(doctors.map(doc => (doc._id === id ? updatedDoctor : doc)));\r\n                setSelectedDoctor(null);\r\n                setIsEditMode(false);\r\n            })\r\n            .catch(error => console.error('Error updating doctor:', error));\r\n    };\r\n\r\n    // Delete doctor\r\n    const handleDeleteDoctor = (id) => {\r\n        axios\r\n            .delete(`http://localhost:5000/doctors/delete/${id}`)\r\n            .then(() => {\r\n                setDoctors(doctors.filter(doc => doc._id !== id));\r\n            })\r\n            .catch(error => console.error('Error deleting doctor:', error));\r\n    };\r\n\r\n    // Edit doctor\r\n    const handleEditDoctor = (doctor) => {\r\n        setSelectedDoctor(doctor);\r\n        setIsEditMode(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-doc-container\">\r\n            <div className=\"form-sections\">\r\n                <h4>{isEditMode ? 'Edit Doctor' : 'Add New Doctor'}</h4>\r\n                <form\r\n                    onSubmit={isEditMode\r\n                        ? (e) => handleUpdateDoctor(selectedDoctor._id, e)\r\n                        : handleAddDoctor}\r\n                >\r\n                    <label>Name: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={isEditMode ? selectedDoctor.name : newDoctor.name}\r\n                        onChange={(e) =>\r\n                            isEditMode\r\n                                ? setSelectedDoctor({ ...selectedDoctor, name: e.target.value })\r\n                                : setNewDoctor({ ...newDoctor, name: e.target.value })\r\n                        }\r\n                    />\r\n                    <br />\r\n                    <label>Specialty: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={isEditMode ? selectedDoctor.specialty : newDoctor.specialty}\r\n                        onChange={(e) =>\r\n                            isEditMode\r\n                                ? setSelectedDoctor({ ...selectedDoctor, specialty: e.target.value })\r\n                                : setNewDoctor({ ...newDoctor, specialty: e.target.value })\r\n                        }\r\n                    />\r\n                    <br />\r\n                    <button type=\"submit\">\r\n                        {isEditMode ? 'Update Doctor' : 'Add Doctor'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"doctors-section\">\r\n                <h3>Doctors ({doctors.length})</h3>\r\n                <div className=\"doctor-list\">\r\n                    {doctors.map(doctor => (\r\n                        <DoctorCard\r\n                            key={doctor._id}\r\n                            doctor={doctor}\r\n                            onEdit={handleEditDoctor}\r\n                            onDelete={handleDeleteDoctor}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Doctors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}