{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hospital Managment\\\\Frontend\\\\myapp\\\\src\\\\components\\\\Doctors.js\",\n  _s = $RefreshSig$();\n// src/components/Doctors.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DoctorCard from './DoctorCard';\nimport './DoctorCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doctors = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [newDoctor, setNewDoctor] = useState({\n    name: '',\n    specialty: ''\n  });\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // Fetch doctors from backend\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n  const fetchDoctors = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/doctors');\n      setDoctors(data);\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  // Add doctor\n  const handleAddDoctor = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.post('http://localhost:5000/doctors/add', newDoctor);\n      setDoctors([...doctors, data]);\n      setNewDoctor({\n        name: '',\n        specialty: ''\n      });\n    } catch (error) {\n      console.error('Error adding doctor:', error);\n    }\n  };\n\n  // Update doctor\n  const handleUpdateDoctor = async (id, e) => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.put(`http://localhost:5000/doctors/update/${id}`, selectedDoctor);\n      setDoctors(doctors.map(doc => doc._id === id ? data : doc));\n      setSelectedDoctor(null);\n      setIsEditMode(false);\n    } catch (error) {\n      console.error('Error updating doctor:', error);\n    }\n  };\n\n  // Delete doctor\n  const handleDeleteDoctor = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/doctors/delete/${id}`);\n      setDoctors(doctors.filter(doc => doc._id !== id));\n    } catch (error) {\n      console.error('Error deleting doctor:', error);\n    }\n  };\n\n  // Edit doctor\n  const handleEditDoctor = doctor => {\n    setSelectedDoctor(doctor);\n    setIsEditMode(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-row\",\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: isEditMode ? 'Edit Doctor' : 'Add New Doctor'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: isEditMode ? e => handleUpdateDoctor(selectedDoctor._id, e) : handleAddDoctor,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: isEditMode ? (selectedDoctor === null || selectedDoctor === void 0 ? void 0 : selectedDoctor.name) || '' : newDoctor.name,\n          onChange: e => isEditMode ? setSelectedDoctor({\n            ...selectedDoctor,\n            name: e.target.value\n          }) : setNewDoctor({\n            ...newDoctor,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Specialty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: isEditMode ? (selectedDoctor === null || selectedDoctor === void 0 ? void 0 : selectedDoctor.specialty) || '' : newDoctor.specialty,\n          onChange: e => isEditMode ? setSelectedDoctor({\n            ...selectedDoctor,\n            specialty: e.target.value\n          }) : setNewDoctor({\n            ...newDoctor,\n            specialty: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isEditMode ? 'Update Doctor' : 'Add Doctor'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctors-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Doctors (\", doctors.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-list\",\n        children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(DoctorCard, {\n          doctor: doctor,\n          onEdit: handleEditDoctor,\n          onDelete: handleDeleteDoctor\n        }, doctor._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Doctors, \"nA8UyR+HLHsJlqgR8lQF6nlTTlc=\");\n_c = Doctors;\nexport default Doctors;\nvar _c;\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"names":["React","useState","useEffect","axios","DoctorCard","jsxDEV","_jsxDEV","Doctors","_s","doctors","setDoctors","newDoctor","setNewDoctor","name","specialty","selectedDoctor","setSelectedDoctor","isEditMode","setIsEditMode","fetchDoctors","data","get","error","console","handleAddDoctor","e","preventDefault","post","handleUpdateDoctor","id","put","map","doc","_id","handleDeleteDoctor","delete","filter","handleEditDoctor","doctor","className","style","width","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","length","onEdit","onDelete","_c","$RefreshReg$"],"sources":["D:/Hospital Managment/Frontend/myapp/src/components/Doctors.js"],"sourcesContent":["// src/components/Doctors.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport DoctorCard from './DoctorCard';\r\nimport './DoctorCard.css';\r\n\r\nconst Doctors = () => {\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [newDoctor, setNewDoctor] = useState({ name: '', specialty: '' });\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n    // Fetch doctors from backend\r\n    useEffect(() => {\r\n        fetchDoctors();\r\n    }, []);\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const { data } = await axios.get('http://localhost:5000/doctors');\r\n            setDoctors(data);\r\n        } catch (error) {\r\n            console.error('Error fetching doctors:', error);\r\n        }\r\n    };\r\n\r\n    // Add doctor\r\n    const handleAddDoctor = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const { data } = await axios.post(\r\n                'http://localhost:5000/doctors/add',\r\n                newDoctor\r\n            );\r\n            setDoctors([...doctors, data]);\r\n            setNewDoctor({ name: '', specialty: '' });\r\n        } catch (error) {\r\n            console.error('Error adding doctor:', error);\r\n        }\r\n    };\r\n\r\n    // Update doctor\r\n    const handleUpdateDoctor = async (id, e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const { data } = await axios.put(\r\n                `http://localhost:5000/doctors/update/${id}`,\r\n                selectedDoctor\r\n            );\r\n            setDoctors(\r\n                doctors.map((doc) => (doc._id === id ? data : doc))\r\n            );\r\n            setSelectedDoctor(null);\r\n            setIsEditMode(false);\r\n        } catch (error) {\r\n            console.error('Error updating doctor:', error);\r\n        }\r\n    };\r\n\r\n    // Delete doctor\r\n    const handleDeleteDoctor = async (id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/doctors/delete/${id}`);\r\n            setDoctors(doctors.filter((doc) => doc._id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting doctor:', error);\r\n        }\r\n    };\r\n\r\n    // Edit doctor\r\n    const handleEditDoctor = (doctor) => {\r\n        setSelectedDoctor(doctor);\r\n        setIsEditMode(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-row\" style={{ width: '100%' }}>\r\n            <div className=\"form-sections\">\r\n                <h4>{isEditMode ? 'Edit Doctor' : 'Add New Doctor'}</h4>\r\n                <form\r\n                    onSubmit={\r\n                        isEditMode\r\n                            ? (e) => handleUpdateDoctor(selectedDoctor._id, e)\r\n                            : handleAddDoctor\r\n                    }\r\n                >\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={\r\n                            isEditMode\r\n                                ? selectedDoctor?.name || ''\r\n                                : newDoctor.name\r\n                        }\r\n                        onChange={(e) =>\r\n                            isEditMode\r\n                                ? setSelectedDoctor({\r\n                                      ...selectedDoctor,\r\n                                      name: e.target.value,\r\n                                  })\r\n                                : setNewDoctor({\r\n                                      ...newDoctor,\r\n                                      name: e.target.value,\r\n                                  })\r\n                        }\r\n                        required\r\n                    />\r\n                    <label>Specialty:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={\r\n                            isEditMode\r\n                                ? selectedDoctor?.specialty || ''\r\n                                : newDoctor.specialty\r\n                        }\r\n                        onChange={(e) =>\r\n                            isEditMode\r\n                                ? setSelectedDoctor({\r\n                                      ...selectedDoctor,\r\n                                      specialty: e.target.value,\r\n                                  })\r\n                                : setNewDoctor({\r\n                                      ...newDoctor,\r\n                                      specialty: e.target.value,\r\n                                  })\r\n                        }\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">\r\n                        {isEditMode ? 'Update Doctor' : 'Add Doctor'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"doctors-section\">\r\n                <h3>Doctors ({doctors.length})</h3>\r\n                <div className=\"doctor-list\">\r\n                    {doctors.map((doctor) => (\r\n                        <DoctorCard\r\n                            key={doctor._id}\r\n                            doctor={doctor}\r\n                            onEdit={handleEditDoctor}\r\n                            onDelete={handleDeleteDoctor}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Doctors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}